# Generated by Django 5.1.4 on 2024-12-15 12:08

import apps.common.fields
import django.db.models.deletion
import timescale.db.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketSymbol',
            fields=[
                ('symbol', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('market', models.CharField(max_length=50)),
                ('asset_type', models.CharField(max_length=50)),
                ('ipo_date', models.DateField(blank=True, null=True)),
                ('delisting_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(max_length=20)),
                ('has_company_info', models.BooleanField(default=False)),
                ('is_delisted', models.BooleanField(default=False)),
                ('min_period_yfinance', models.CharField(blank=True, max_length=20)),
                ('daily_period_yfinance', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'market_symbol',
            },
        ),
        migrations.CreateModel(
            name='SnapshotIndicator',
            fields=[
                ('snapshot_indicator_id', models.AutoField(primary_key=True, serialize=False)),
                ('snapshot_category', models.CharField(blank=True, choices=[('none', 'None'), ('screening', 'Screening'), ('overview', 'Overview'), ('setup', 'Setup'), ('technical', 'Technical'), ('fundamental', 'Fundamental'), ('bull flag', 'Bull Flag')], default='none', max_length=50, null=True)),
                ('snapshot_column_group', models.CharField(blank=True, max_length=100, null=True)),
                ('snapshot_column', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'snapshot_indicator',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('trade_id', models.AutoField(primary_key=True, serialize=False)),
                ('profit_actual', models.DecimalField(decimal_places=2, max_digits=15)),
                ('profit_actual_ratio', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_finished', models.BooleanField(blank=True, null=True)),
                ('trade_phase', models.CharField(choices=[('0', 'None'), ('1', 'Before Breakout'), ('2', 'Breaking Out'), ('3', 'After Breakout')], default='0', max_length=20)),
                ('trade_phase_rating', models.CharField(choices=[('0', '0 None'), ('1', '1 First'), ('2', '2 Second'), ('3', '3 Third'), ('4', '4 Forth'), ('5', '5 Fifth'), ('6', '6 Sixth'), ('7', '7 Seventh'), ('8', '8 Eighth'), ('9', '9 Ninth'), ('10', '10 Tenth')], default='0', max_length=20)),
                ('trade_source', models.CharField(choices=[('A', 'PLATFORM A'), ('B', 'PLATFORM B'), ('C', 'PLATFORM C')], default='A', max_length=20)),
            ],
            options={
                'db_table': 'trade',
            },
        ),
        migrations.CreateModel(
            name='UserStaticSetting',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('capital', models.DecimalField(decimal_places=2, default=10000, max_digits=15)),
                ('risk', models.DecimalField(decimal_places=2, default=0.5, max_digits=5)),
                ('rounding', models.IntegerField(default=2, null=True)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expect_gain_risk_ratio', models.DecimalField(decimal_places=2, default=2, max_digits=5)),
                ('position_min', models.IntegerField(default=2, null=True)),
                ('position_max', models.IntegerField(default=2, null=True)),
                ('total_risk_cap', models.DecimalField(decimal_places=2, default=10, max_digits=5)),
                ('net_risk_cap', models.DecimalField(decimal_places=2, default=5, max_digits=5)),
                ('performance_tracking_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_static_setting',
            },
        ),
        migrations.CreateModel(
            name='UtilitiesFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'utilities_filter',
            },
        ),
        migrations.CreateModel(
            name='MarketStock',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock', serialize=False, to='common.marketsymbol')),
                ('underlying_symbol', models.CharField(blank=True, max_length=10, null=True)),
                ('short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('long_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.URLField()),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('long_business_summary', models.TextField(blank=True, null=True)),
                ('full_time_employees', models.PositiveIntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('financial_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('exchange', models.CharField(blank=True, max_length=10, null=True)),
                ('quote_type', models.CharField(blank=True, max_length=10, null=True)),
                ('time_zone_full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('time_zone_short_name', models.CharField(blank=True, max_length=10, null=True)),
                ('gmt_offset_milliseconds', models.BigIntegerField(blank=True, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'market_stock',
            },
        ),
        migrations.CreateModel(
            name='MarketStockDividend',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_dividend', serialize=False, to='common.marketsymbol')),
                ('dividend_rate', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('dividend_yield', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('ex_dividend_date', models.DateTimeField(blank=True, null=True)),
                ('payout_ratio', models.DecimalField(blank=True, decimal_places=9, max_digits=20, null=True)),
                ('five_year_avg_dividend_yield', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('trailing_annual_dividend_rate', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('trailing_annual_dividend_yield', models.DecimalField(blank=True, decimal_places=9, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'market_stock_dividend',
            },
        ),
        migrations.CreateModel(
            name='MarketStockFinancial',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_financial', serialize=False, to='common.marketsymbol')),
                ('total_cash', models.BigIntegerField(blank=True, null=True)),
                ('total_cash_per_share', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('ebitda', models.BigIntegerField(blank=True, null=True)),
                ('total_debt', models.BigIntegerField(blank=True, null=True)),
                ('quick_ratio', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('current_ratio', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('total_revenue', models.BigIntegerField(blank=True, null=True)),
                ('debt_to_equity', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('revenue_per_share', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('net_income_to_common', models.BigIntegerField(blank=True, null=True)),
                ('free_cashflow', models.BigIntegerField(blank=True, null=True)),
                ('operating_cashflow', models.BigIntegerField(blank=True, null=True)),
                ('last_fiscal_year_end', models.DateTimeField(blank=True, null=True)),
                ('next_fiscal_year_end', models.DateTimeField(blank=True, null=True)),
                ('most_recent_quarter', models.DateTimeField(blank=True, null=True)),
                ('last_split_factor', models.CharField(blank=True, max_length=10, null=True)),
                ('last_split_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'market_stock_financial',
            },
        ),
        migrations.CreateModel(
            name='MarketStockPerformance',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_performance', serialize=False, to='common.marketsymbol')),
                ('fifty_two_week_low', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('fifty_two_week_high', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('fifty_day_average', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('two_hundred_day_average', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('earnings_quarterly_growth', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('earnings_growth', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('revenue_growth', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('gross_margins', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('ebitda_margins', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('operating_margins', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('return_on_assets', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('return_on_equity', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('profit_margins', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
            ],
            options={
                'db_table': 'market_stock_performance',
            },
        ),
        migrations.CreateModel(
            name='MarketStockPrice',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_price', serialize=False, to='common.marketsymbol')),
                ('price_hint', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_close', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('day_low', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('day_high', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('regular_market_previous_close', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('regular_market_open', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('regular_market_day_low', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('regular_market_day_high', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('current_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('bid', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('ask', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('bid_size', models.PositiveIntegerField(blank=True, null=True)),
                ('ask_size', models.PositiveIntegerField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('regular_market_volume', models.BigIntegerField(blank=True, null=True)),
                ('average_volume', models.BigIntegerField(blank=True, null=True)),
                ('average_volume_10days', models.BigIntegerField(blank=True, null=True)),
                ('average_daily_volume_10day', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'market_stock_price',
            },
        ),
        migrations.CreateModel(
            name='MarketStockRiskMetrics',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_risk_metrics', serialize=False, to='common.marketsymbol')),
                ('audit_risk', models.PositiveIntegerField(blank=True, null=True)),
                ('board_risk', models.PositiveIntegerField(blank=True, null=True)),
                ('compensation_risk', models.PositiveIntegerField(blank=True, null=True)),
                ('share_holder_rights_risk', models.PositiveIntegerField(blank=True, null=True)),
                ('overall_risk', models.PositiveIntegerField(blank=True, null=True)),
                ('governance_epoch_date', models.DateTimeField(blank=True, null=True)),
                ('compensation_as_of_epoch_date', models.DateTimeField(blank=True, null=True)),
                ('first_trade_date_epoch_utc', models.DateTimeField(blank=True, null=True)),
                ('max_age', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'market_stock_risk_metrics',
            },
        ),
        migrations.CreateModel(
            name='MarketStockShare',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_share', serialize=False, to='common.marketsymbol')),
                ('float_shares', models.BigIntegerField(blank=True, null=True)),
                ('shares_outstanding', models.BigIntegerField(blank=True, null=True)),
                ('shares_short', models.BigIntegerField(blank=True, null=True)),
                ('shares_short_prior_month', models.BigIntegerField(blank=True, null=True)),
                ('shares_short_previous_month_date', models.DateTimeField(blank=True, null=True)),
                ('date_short_interest', models.DateTimeField(blank=True, null=True)),
                ('shares_percent_shares_out', models.DecimalField(blank=True, decimal_places=9, max_digits=20, null=True)),
                ('held_percent_insiders', models.DecimalField(blank=True, decimal_places=9, max_digits=20, null=True)),
                ('held_percent_institutions', models.DecimalField(blank=True, decimal_places=9, max_digits=20, null=True)),
                ('short_ratio', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('short_percent_of_float', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
            ],
            options={
                'db_table': 'market_stock_share',
            },
        ),
        migrations.CreateModel(
            name='MarketStockTarget',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_target', serialize=False, to='common.marketsymbol')),
                ('target_high_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('target_low_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('target_mean_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('target_median_price', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('recommendation_mean', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('recommendation_key', models.CharField(blank=True, max_length=10, null=True)),
                ('number_of_analyst_opinions', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'market_stock_target',
            },
        ),
        migrations.CreateModel(
            name='MarketStockValuation',
            fields=[
                ('symbol', models.OneToOneField(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='stock_valuation', serialize=False, to='common.marketsymbol')),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('beta', models.DecimalField(blank=True, decimal_places=7, max_digits=20, null=True)),
                ('trailing_pe', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('forward_pe', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('price_to_sales_trailing_12_months', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('price_to_book', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('book_value', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('peg_ratio', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('trailing_peg_ratio', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('enterprise_value', models.BigIntegerField(blank=True, null=True)),
                ('enterprise_to_revenue', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('enterprise_to_ebitda', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('trailing_eps', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('forward_eps', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
            ],
            options={
                'db_table': 'market_stock_valuation',
            },
        ),
        migrations.CreateModel(
            name='MarketStockHistoricalBarsByDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', timescale.db.models.fields.TimescaleDateTimeField(interval='1 day')),
                ('symbol', models.CharField(default='NaN', max_length=10)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('dividend', models.FloatField()),
                ('stock_splits', models.FloatField()),
            ],
            options={
                'db_table': 'market_stock_hist_bars_day_ts',
                'indexes': [models.Index(fields=['symbol', 'time'], name='market_stoc_symbol_cfb217_idx')],
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='symbol_timestamp_day_pk')],
            },
        ),
        migrations.CreateModel(
            name='MarketStockHistoricalBarsByMin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', timescale.db.models.fields.TimescaleDateTimeField(interval='1 day')),
                ('symbol', models.CharField(default='NaN', max_length=10)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('dividend', models.FloatField()),
                ('stock_splits', models.FloatField()),
            ],
            options={
                'db_table': 'market_stock_hist_bars_min_ts',
                'indexes': [models.Index(fields=['symbol', 'time'], name='market_stoc_symbol_e1beec_idx')],
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='symbol_timestamp_min_pk')],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('portfolio_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('money_market', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('cash', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio',
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('holding_id', models.AutoField(primary_key=True, serialize=False)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.portfolio')),
            ],
            options={
                'db_table': 'holding',
                'unique_together': {('portfolio', 'symbol')},
            },
        ),
        migrations.CreateModel(
            name='Funding',
            fields=[
                ('funding_id', models.AutoField(primary_key=True, serialize=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('funding_type', models.CharField(choices=[('0', 'None'), ('1', 'Withdraw'), ('2', 'Deposit')], default='0', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.portfolio')),
            ],
            options={
                'db_table': 'funding',
            },
        ),
        migrations.CreateModel(
            name='CashBalance',
            fields=[
                ('cash_balance_id', models.AutoField(primary_key=True, serialize=False)),
                ('money_market', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('cash', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, null=True)),
                ('as_of_date', models.DateField(blank=True, null=True)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.portfolio')),
            ],
            options={
                'db_table': 'cash_balance',
            },
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('screening_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('0', 'None'), ('1', 'Active'), ('-1', 'Deactivate')], default='0', max_length=8, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('file_pattern', models.CharField(blank=True, max_length=255, null=True)),
                ('import_models', models.CharField(blank=True, max_length=255, null=True)),
                ('addendum_screening', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addendums', to='common.screening')),
                ('ref_screening', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.screening')),
            ],
            options={
                'db_table': 'screening',
            },
        ),
        migrations.CreateModel(
            name='ScreeningCriteria',
            fields=[
                ('screening_criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria', models.CharField(max_length=255)),
                ('condition', models.CharField(max_length=255)),
                ('explain', models.TextField()),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.screening')),
            ],
            options={
                'db_table': 'screening_criteria',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('strategy_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('as_of_date', models.DateField()),
                ('owner_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'strategy',
            },
        ),
        migrations.CreateModel(
            name='StrategyCategory',
            fields=[
                ('strategy_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('strategy_category', models.CharField(blank=True, choices=[('None', 'None'), ('vcp', 'VCP'), ('screening', 'Screening'), ('overview', 'Overview'), ('setup', 'Setup'), ('technical', 'Technical'), ('fundamental', 'Fundamental'), ('bull flag', 'Bull Flag')], max_length=50, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.strategy')),
            ],
            options={
                'db_table': 'strategy_category',
            },
        ),
        migrations.CreateModel(
            name='StrategyCategorySnapshot',
            fields=[
                ('strategy_category_snapshot_id', models.AutoField(primary_key=True, serialize=False)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('snapshot_indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.snapshotindicator')),
                ('strategy_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.strategycategory')),
            ],
            options={
                'db_table': 'strategy_category_snapshot',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_type', models.CharField(blank=True, choices=[('0', 'None'), ('1', 'Market'), ('2', 'Limit'), ('3', 'Stop'), ('4', 'Stop Limit')], default='0', max_length=20, null=True)),
                ('quantity_target', models.IntegerField(blank=True, null=True)),
                ('price_market', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_stop', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('action', models.CharField(choices=[('0', 'None'), ('1', 'Active BUY Initial Size'), ('2', 'Active BUY More Size'), ('11', 'Active RAISE Stop Bar'), ('15', 'Active LOWER Stop Bar'), ('21', 'Passive STOP on Profit'), ('25', 'Passive STOP get Lost'), ('31', 'Active STOP lock Profit'), ('35', 'Active STOP take Lost')], default='0', max_length=20)),
                ('timing', models.CharField(choices=[('0', 'None'), ('1', 'Day'), ('2', 'Good Till Cancel'), ('3', 'GTC Extended Hours')], default='0', max_length=20)),
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_style', models.CharField(choices=[('0', 'None'), ('1', 'Buy'), ('2', 'Sell')], default='0', max_length=20)),
                ('is_obsolete', models.BooleanField(blank=True, default=False, null=True)),
                ('order_place_date', models.DateTimeField(blank=True, null=True)),
                ('holding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.holding')),
                ('ref_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.order')),
                ('trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.trade')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('0', 'None'), ('1', 'Buy'), ('2', 'Sell'), ('11', 'Deposit'), ('12', 'Withdraw')], default='0', max_length=20)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('quantity_final', models.IntegerField(blank=True, null=True)),
                ('price_final', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('holding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.holding')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.order')),
                ('trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.trade')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='UtilitiesLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'utilities_lookup',
                'indexes': [models.Index(fields=['category', 'type', 'key'], name='utilities_l_categor_1f51fd_idx')],
                'constraints': [models.UniqueConstraint(fields=('category', 'type', 'key'), name='utilities_lookup_category_type_key_pk')],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('wishlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('target_buy_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('target_sell_stop', models.DecimalField(decimal_places=2, max_digits=10)),
                ('target_sell_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('list_on', models.DateTimeField(blank=True, null=True)),
                ('is_filled', models.BooleanField(default=False)),
                ('action_on', models.DateTimeField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'wishlist',
            },
        ),
        migrations.CreateModel(
            name='ScreeningResult',
            fields=[
                ('screening_result_id', models.AutoField(primary_key=True, serialize=False)),
                ('run_at', models.DateTimeField()),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.screening')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
                ('wishlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.wishlist')),
            ],
            options={
                'db_table': 'screening_result',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='wishlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.wishlist'),
        ),
        migrations.CreateModel(
            name='MarketCompanyOfficer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_age', models.PositiveIntegerField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('year_born', models.PositiveIntegerField(blank=True, null=True)),
                ('fiscal_year', models.PositiveIntegerField(blank=True, null=True)),
                ('total_pay', models.BigIntegerField(blank=True, null=True)),
                ('exercised_value', models.BigIntegerField(blank=True, null=True)),
                ('unexercised_value', models.BigIntegerField(blank=True, null=True)),
                ('symbol', models.ForeignKey(db_column='symbol', on_delete=django.db.models.deletion.DO_NOTHING, related_name='stock_company_officer', to='common.marketsymbol')),
            ],
            options={
                'db_table': 'market_company_officer',
                'unique_together': {('symbol', 'name')},
            },
        ),
        migrations.CreateModel(
            name='RatingIndicatorResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('sma', models.FloatField(blank=True, null=True)),
                ('rsi', models.FloatField(blank=True, null=True)),
                ('bollinger_upper', models.FloatField(blank=True, null=True)),
                ('bollinger_lower', models.FloatField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'rating_indicator_result',
                'indexes': [models.Index(fields=['symbol', 'time'], name='rating_indi_symbol__25db64_idx')],
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='rating_indicator_result_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='ResearchStockVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('avg_volume_50', models.BigIntegerField(blank=True, null=True)),
                ('avg_volume_5', models.BigIntegerField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'research_stock_volume',
                'constraints': [models.UniqueConstraint(fields=('symbol',), name='unique_symbol')],
            },
        ),
        migrations.CreateModel(
            name='ScreeningOperation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('file_name', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, choices=[('0', 'None'), ('-1', 'Bypass'), ('1', 'Queue'), ('4', 'Done'), ('5', 'Failed')], default='0', max_length=8, null=True)),
                ('change_summary', apps.common.fields.ImportExportFileField(blank=True, null=True, storage=apps.common.fields.lazy_initialize_storage_class, upload_to='django-import-export-celery-import-change-summaries', verbose_name='Summary of changes made by this import')),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_result', models.TextField(blank=True, null=True)),
                ('errors', models.TextField(blank=True, null=True)),
                ('screening', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.screening')),
            ],
            options={
                'db_table': 'screening_operation',
                'indexes': [models.Index(fields=['file_name', 'time'], name='screening_o_file_na_1caf61_idx')],
                'constraints': [models.UniqueConstraint(fields=('time', 'file_name'), name='screening_operation_unique_time_file_name')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotBullFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('bull_indicator', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('bull_flag', models.BooleanField(blank=True, null=True)),
                ('weekly_bull_flag', models.BooleanField(blank=True, null=True)),
                ('bullish_engulfing_daily', models.BooleanField(blank=True, null=True)),
                ('bullish_hammer_daily', models.BooleanField(blank=True, null=True)),
                ('bullish_harami_daily', models.BooleanField(blank=True, null=True)),
                ('bullish_engulfing_weekly', models.BooleanField(blank=True, null=True)),
                ('bullish_hammer_weekly', models.BooleanField(blank=True, null=True)),
                ('bullish_harami_weekly', models.BooleanField(blank=True, null=True)),
                ('flag_type', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('flag_pole', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('flag_length', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('flag_width', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('weekly_flag_type', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_bull_flag',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_bull_flag_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('high_growth_momentum_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('eps_growth_1y_ttm', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('eps_growth_q2q_q_minus_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('eps_growth_q2q', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('eps_growth_q2q_q_plus_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('sales_growth_q2q_q_minus_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('sales_growth_q2q', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('sales_growth_q2q_q_plus_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('profit_margin_q_minus_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('profit_margin_q', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('percent_change', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('one_month_performance', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('earnings_last', models.DateField(blank=True, null=True)),
                ('earnings_last_bmo_amc', models.CharField(blank=True, max_length=10, null=True)),
                ('earnings_next', models.DateField(blank=True, null=True)),
                ('earnings_next_bmo_amc', models.CharField(blank=True, max_length=10, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_earning',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_earning_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotFundamental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('valuation_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('price_FCF', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('PEG_next_year', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('growth_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('EPS_growth_Q2Q', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('profitability_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('high_growth_momentum_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('avg_ROIC_5y', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('FCF_margin', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('health_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('interest_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('shares_outstanding_5y_change', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_fundamental',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_fundamental_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('name', models.CharField(max_length=255)),
                ('setup_rating', models.FloatField(blank=True, null=True)),
                ('technical_rating', models.FloatField(blank=True, null=True)),
                ('fundamental_rating', models.FloatField(blank=True, null=True)),
                ('relative_strength', models.FloatField(blank=True, null=True)),
                ('one_month_performance', models.FloatField(blank=True, null=True)),
                ('three_month_performance', models.FloatField(blank=True, null=True)),
                ('six_month_performance', models.FloatField(blank=True, null=True)),
                ('percent_change', models.FloatField(blank=True, null=True)),
                ('price_earnings', models.FloatField(blank=True, null=True)),
                ('market_cap', models.FloatField(blank=True, null=True)),
                ('avg_volume_50', models.FloatField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_overview',
                'indexes': [models.Index(fields=['symbol', 'time'], name='snapshot_ov_symbol__5747b5_idx')],
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_overview_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotScreening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.screening')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_screening',
                'indexes': [models.Index(fields=['symbol', 'time', 'screening'], name='snapshot_sc_symbol__924809_idx')],
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time', 'screening'), name='snapshot_screening_unique_symbol_time_screening_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('market_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('high_52_week', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('weekly_support', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('GICS_sector', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_setup',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_setup_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='SnapshotTechnical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('lower_bollinger_band', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('upper_bollinger_band', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('RSI_14', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('MACD_12_26_9', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ADX_14', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('asset_turnover', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('daily_effective_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='common.marketsymbol')),
            ],
            options={
                'db_table': 'snapshot_technical',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time'), name='snapshot_technical_unique_symbol_time_pk')],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField()),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.marketsymbol')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.strategy')),
            ],
            options={
                'db_table': 'rating',
                'constraints': [models.UniqueConstraint(fields=('symbol', 'time', 'strategy'), name='rating_unique_symbol_time_strategy_pk')],
            },
        ),
    ]
